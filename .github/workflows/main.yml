name: build

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: pre-commit/action@v3.0.0
  test:
    needs: lint
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: [ 3.8, 3.9, '3.10']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Run pytest
        run : poetry run pytest --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.7
        env:
          OS: ${{ matrix.os }}
          PYTHON: ${{ matrix.python-version }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
        if: github.event_name != 'pull_request'
